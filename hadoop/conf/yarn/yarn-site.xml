{%- from 'hadoop/settings.sls' import hadoop with context %}
{%- from 'hadoop/hdfs/settings.sls' import hdfs with context %}
{%- from 'hadoop/mapred/settings.sls' import mapred with context %}
{%- from 'hadoop/yarn/settings.sls' import yarn with context %}
{%- set major = hadoop.major_version|string() -%}<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>
    <property>
        <name>yarn.resourcemanager.scheduler.address</name>
        <value>{{ yarn.resourcemanager_host }}:{{ yarn.scheduler_port }}</value>
    </property>
     
    <property>
        <name>yarn.resourcemanager.resource-tracker.address</name>
        <value>{{ yarn.resourcemanager_host }}:{{ yarn.resourcetracker_port }}</value>
    </property>
     
    <property>
        <name>yarn.resourcemanager.address</name>
        <value>{{ yarn.resourcemanager_host }}:{{ yarn.resourcemanager_port }}</value>
    </property>
     
    <property>
        <name>yarn.resourcemanager.admin.address</name>
        <value>{{ yarn.resourcemanager_host }}:{{ yarn.resourcemanager_admin_port }}</value>
    </property>
     
    <property>
        <name>yarn.resourcemanager.webapp.address</name>
        <value>{{ yarn.resourcemanager_host }}:{{ yarn.resourcemanager_webapp_port }}</value>
    </property>

    <property>
        <name>yarn.log.server.url</name>
        <value>http://{{ mapred.jobtracker_host }}:{{ mapred.jobhistory_webapp_port }}/jobhistory/logs/</value>
        <description>URL for job history server</description>
    </property>

    <property>
        <name>yarn.nodemanager.aux-services</name>
        <value>mapreduce_shuffle</value>
    </property>
     
    <property>
        <name>yarn.nodemanager.aux-services.mapreduce.shuffle.class</name>
        <value>org.apache.hadoop.mapred.ShuffleHandler</value>
    </property>

    <property>
        <name>yarn.resourcemanager.scheduler.class</name>
        <value>org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler</value>
    </property>

    <property>
        <name>yarn.nodemanager.local-dirs</name>
        <value>
{%- for d in yarn.local_disks -%}
{%- if loop.last -%}
{{ d }}/yarn/local
{%- else -%}
{{ d }}/yarn/local,
{%- endif -%}
{%- endfor -%}</value>
   </property>

    <property>
        <name>yarn.nodemanager.log-dirs</name>
        <value>
{%- for d in yarn.local_disks -%}
{%- if loop.last -%}
{{ d }}/yarn/logs
{%- else -%}
{{ d }}/yarn/logs,
{%- endif -%}
{%- endfor -%}</value>
    </property>

    <property>
        <name>yarn.nodemanager.remote-app-log-dir</name>
        <value>
{%- for d in yarn.local_disks -%}
{%- if loop.last -%}
{{ d }}/yarn/app_data
{%- else -%}
{{ d }}/yarn/app_data,
{%- endif -%}
{%- endfor -%}</value>
    </property>

</configuration>
